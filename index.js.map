{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from \"axios\";\n\nfunction getImagesByQuery(query) {\n\n    const params = new URLSearchParams({\n        key: \"51330331-9209d844650666afb5a4e1e7c\",\n        q: `${query}`,\n        image_type: \"photo\",\n        orientation: \"horizontal\",\n        safesearch: true,\n});\n\nreturn axios.get(`https://pixabay.com/api/?${params}`)\n\n    .then((response) => {\n        return response.data.hits;\n    })\n\t.catch(error => console.log(error.messege));\n}\n\nexport default getImagesByQuery \n\n// Ця функція повинна приймати один параметр query (пошукове слово, яке є рядком),\n// здійснювати HTTP-запит і повертати значення властивості data з отриманої відповіді.\n                            \n// https://pixabay.com/api/?key=51330331-9209d844650666afb5a4e1e7c&q=yellow+flowers&image_type=photo\n","import SimpleLightbox from \"simplelightbox\";\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst list = document.querySelector(\".gallery\");\nconst loader = document.querySelector('.loader');\n\nexport function createGallery(images) {    \n    const markup = images.map(({\n        webformatURL, largeImageURL, tags, likes, views, comments, downloads\n        }) => \n        `<li class=\"card\">            \n                <a href=\"${largeImageURL}\" class=\"largeImage\">\n                    <img src=\"${webformatURL}\" class=\"webFormat\" alt=\"${tags}\" />\n                </a>    \n                      \n                <div class=\"container-lable\">\n                    <div class=\"label\">\n                        <h3 class=\"headrLable\">Likes</h3>\n                        <p class=\"textLable\">${likes}</p>\n                    </div>\n                    <div class=\"label\">\n                        <h3 class=\"headrLable\">Views</h3>\n                        <p class=\"textLable\">${views}</p>\n                    </div>\n                    <div class=\"label\">\n                        <h3 class=\"headrLable\">Comments</h3>\n                        <p class=\"textLable\">${comments}</p>\n                    </div>\n                    <div class=\"label\">\n                        <h3 class=\"headrLable\">Downloads</h3>\n                        <p class=\"textLable\">${downloads}</p>\n                    </div>\n                </div>            \n        </li>`\n    ).join(\"\");    \n    list.innerHTML = markup;\n\n    let gallery = new SimpleLightbox('.largeImage', {\n        captionsData: 'alt',\n        captionDelay: 250,\n    });\n    gallery.refresh();\n}; //Ця функція повинна приймати масив images, створювати HTML - розмітку для галереї,\n//                          додавати її в контейнер галереї та викликати метод екземпляра SimpleLightbox refresh().Нічого не повертає.\n\nexport function clearGallery() {\n    list.innerHTML = \"\";\n}; // Ця функція нічого не приймає та повинна очищати вміст контейнера галереї. Нічого не повертає\n\nexport function showLoader() {    \n    loader.classList.remove(\"hidden\");\n}; // Ця функція нічого не приймає, повинна додавати клас для відображення лоадера. Нічого не повертає.\n\nexport function hideLoader() {\n    loader.classList.add(\"hidden\");\n}; // Ця функція нічого не приймає, повинна прибирати клас для відображення лоадера. Нічого не повертає.","\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nimport getImagesByQuery from \"./js/pixabay-api\"\nimport { createGallery, showLoader, hideLoader, clearGallery } from \"./js/render-functions\";\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"submit\", event => {\n  event.preventDefault();\n  const inputText = document.querySelector('input[name=\"search-text\"]');  \n  \n  if (inputText.value === \" \" || inputText.value === \"  \") {    \n    event.preventDefault();    \n    return inputText.value = \"\";      \n  }\n  \n  const searchText = inputText.value.trim();\n  clearGallery();\n  showLoader();\n  \n  getImagesByQuery(searchText)\n    .then(images => {\n      if (images.length <= 0) {\n        return iziToast.error({\n          title: 'Error',\n          message: 'Sorry, there are no images matching your search query. Please try again!',\n          position: 'topRight'\n        });\n      }\n      createGallery(images);\n    })\n    .finally(() => {\n    hideLoader();\n  })  \n  event.target.reset();  \n});"],"names":["getImagesByQuery","query","params","axios","response","error","list","loader","createGallery","images","markup","webformatURL","largeImageURL","tags","likes","views","comments","downloads","SimpleLightbox","clearGallery","showLoader","hideLoader","form","event","inputText","searchText","iziToast"],"mappings":"owBAEA,SAASA,EAAiBC,EAAO,CAE7B,MAAMC,EAAS,IAAI,gBAAgB,CAC/B,IAAK,qCACL,EAAG,GAAGD,CAAK,GACX,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAC,EAED,OAAOE,EAAM,IAAI,4BAA4BD,CAAM,EAAE,EAEhD,KAAME,GACIA,EAAS,KAAK,IACxB,EACH,MAAMC,GAAS,QAAQ,IAAIA,EAAM,OAAO,CAAC,CAC3C,CCfA,MAAMC,EAAO,SAAS,cAAc,UAAU,EACxCC,EAAS,SAAS,cAAc,SAAS,EAExC,SAASC,EAAcC,EAAQ,CAClC,MAAMC,EAASD,EAAO,IAAI,CAAC,CACvB,aAAAE,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAC1D,IACD;AAAA,2BACmBL,CAAa;AAAA,gCACRD,CAAY,4BAA4BE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAM7BC,CAAK;AAAA;AAAA;AAAA;AAAA,+CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,+CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,+CAIRC,CAAS;AAAA;AAAA;AAAA,cAIxD,EAAM,KAAK,EAAE,EACTX,EAAK,UAAYI,EAEH,IAAIQ,EAAe,cAAe,CAC5C,aAAc,MACd,aAAc,GACtB,CAAK,EACO,QAAO,CACnB,CAGO,SAASC,GAAe,CAC3Bb,EAAK,UAAY,EACrB,CAEO,SAASc,GAAa,CACzBb,EAAO,UAAU,OAAO,QAAQ,CACpC,CAEO,SAASc,GAAa,CACzBd,EAAO,UAAU,IAAI,QAAQ,CACjC,CChDA,MAAMe,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAUC,GAAS,CACvCA,EAAM,eAAc,EACpB,MAAMC,EAAY,SAAS,cAAc,2BAA2B,EAEpE,GAAIA,EAAU,QAAU,KAAOA,EAAU,QAAU,KACjD,OAAAD,EAAM,eAAc,EACbC,EAAU,MAAQ,GAG3B,MAAMC,EAAaD,EAAU,MAAM,KAAI,EACvCL,IACAC,IAEApB,EAAiByB,CAAU,EACxB,KAAKhB,GAAU,CACd,GAAIA,EAAO,QAAU,EACnB,OAAOiB,EAAS,MAAM,CACpB,MAAO,QACP,QAAS,2EACT,SAAU,UACpB,CAAS,EAEHlB,EAAcC,CAAM,CAC1B,CAAK,EACA,QAAQ,IAAM,CACfY,GACJ,CAAG,EACDE,EAAM,OAAO,OACf,CAAC"}